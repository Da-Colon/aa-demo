/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, type Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DemoNFT, DemoNFTInterface } from "../../contracts/DemoNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintEnergy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601081526020016f13585adbc8115b995c99de4810d85c9960821b815250604051806040016040528060038152602001624d454360e81b815250816000908162000068919062000125565b50600162000077828262000125565b505050620001f1565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ab57607f821691505b602082108103620000cc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012057600081815260208120601f850160051c81016020861015620000fb5750805b601f850160051c820191505b818110156200011c5782815560010162000107565b5050505b505050565b81516001600160401b0381111562000141576200014162000080565b620001598162000152845462000096565b84620000d2565b602080601f831160018114620001915760008415620001785750858301515b600019600386901b1c1916600185901b1785556200011c565b600085815260208120601f198616915b82811015620001c257888601518255948401946001909101908401620001a1565b5085821015620001e15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61166b80620002016000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b80636352211e146101b357806370a08231146101c657806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b314610157578063111ef3531461016c57806323b872dd1461018d57806342842e0e146101a057600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004611071565b610256565b60405190151581526020015b60405180910390f35b61011f610281565b60405161010e91906110de565b61013f61013a3660046110f1565b610313565b6040516001600160a01b03909116815260200161010e565b61016a610165366004611126565b61033a565b005b61017f61017a3660046111dc565b610454565b60405190815260200161010e565b61016a61019b36600461123e565b61048b565b61016a6101ae36600461123e565b6104bc565b61013f6101c13660046110f1565b6104d7565b61017f6101d436600461127a565b610537565b61011f6105bd565b61016a6101ef366004611295565b6105cc565b61016a6102023660046112d1565b6105db565b61011f6102153660046110f1565b610613565b61010261022836600461134d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b03198216632483248360e11b148061027b575061027b82610723565b92915050565b60606000805461029090611380565b80601f01602080910402602001604051908101604052809291908181526020018280546102bc90611380565b80156103095780601f106102de57610100808354040283529160200191610309565b820191906000526020600020905b8154815290600101906020018083116102ec57829003601f168201915b5050505050905090565b600061031e82610773565b506000908152600460205260409020546001600160a01b031690565b6000610345826104d7565b9050806001600160a01b0316836001600160a01b0316036103b75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103d357506103d38133610228565b6104455760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103ae565b61044f83836107d5565b505050565b60008061046060075490565b905061046c8482610843565b61047681846109ce565b610484600780546001019055565b9392505050565b6104953382610a99565b6104b15760405162461bcd60e51b81526004016103ae906113ba565b61044f838383610b17565b61044f838383604051806020016040528060008152506105db565b6000818152600260205260408120546001600160a01b03168061027b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103ae565b60006001600160a01b0382166105a15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103ae565b506001600160a01b031660009081526003602052604090205490565b60606001805461029090611380565b6105d7338383610c7b565b5050565b6105e53383610a99565b6106015760405162461bcd60e51b81526004016103ae906113ba565b61060d84848484610d49565b50505050565b606061061e82610773565b6000828152600660205260408120805461063790611380565b80601f016020809104026020016040519081016040528092919081815260200182805461066390611380565b80156106b05780601f10610685576101008083540402835291602001916106b0565b820191906000526020600020905b81548152906001019060200180831161069357829003601f168201915b5050505050905060006106ce60408051602081019091526000815290565b905080516000036106e0575092915050565b8151156107125780826040516020016106fa929190611407565b60405160208183030381529060405292505050919050565b61071b84610d7c565b949350505050565b60006001600160e01b031982166380ac58cd60e01b148061075457506001600160e01b03198216635b5e139f60e01b145b8061027b57506301ffc9a760e01b6001600160e01b031983161461027b565b6000818152600260205260409020546001600160a01b03166107d25760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103ae565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061080a826104d7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b0382166108995760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103ae565b6000818152600260205260409020546001600160a01b0316156108fe5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103ae565b6000818152600260205260409020546001600160a01b0316156109635760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103ae565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610a495760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103ae565b6000828152600660205260409020610a618282611484565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b600080610aa5836104d7565b9050806001600160a01b0316846001600160a01b03161480610aec57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061071b5750836001600160a01b0316610b0584610313565b6001600160a01b031614949350505050565b826001600160a01b0316610b2a826104d7565b6001600160a01b031614610b505760405162461bcd60e51b81526004016103ae90611544565b6001600160a01b038216610bb25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103ae565b826001600160a01b0316610bc5826104d7565b6001600160a01b031614610beb5760405162461bcd60e51b81526004016103ae90611544565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610cdc5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103ae565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d54848484610b17565b610d6084848484610def565b61060d5760405162461bcd60e51b81526004016103ae90611589565b6060610d8782610773565b6000610d9e60408051602081019091526000815290565b90506000815111610dbe5760405180602001604052806000815250610484565b80610dc884610ef0565b604051602001610dd9929190611407565b6040516020818303038152906040529392505050565b60006001600160a01b0384163b15610ee557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e339033908990889088906004016115db565b6020604051808303816000875af1925050508015610e6e575060408051601f3d908101601f19168201909252610e6b91810190611618565b60015b610ecb573d808015610e9c576040519150601f19603f3d011682016040523d82523d6000602084013e610ea1565b606091505b508051600003610ec35760405162461bcd60e51b81526004016103ae90611589565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061071b565b506001949350505050565b60606000610efd83610f83565b600101905060008167ffffffffffffffff811115610f1d57610f1d611150565b6040519080825280601f01601f191660200182016040528015610f47576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610f5157509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610fc25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610fee576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061100c57662386f26fc10000830492506010015b6305f5e1008310611024576305f5e100830492506008015b612710831061103857612710830492506004015b6064831061104a576064830492506002015b600a831061027b5760010192915050565b6001600160e01b0319811681146107d257600080fd5b60006020828403121561108357600080fd5b81356104848161105b565b60005b838110156110a9578181015183820152602001611091565b50506000910152565b600081518084526110ca81602086016020860161108e565b601f01601f19169290920160200192915050565b60208152600061048460208301846110b2565b60006020828403121561110357600080fd5b5035919050565b80356001600160a01b038116811461112157600080fd5b919050565b6000806040838503121561113957600080fd5b6111428361110a565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561118157611181611150565b604051601f8501601f19908116603f011681019082821181831017156111a9576111a9611150565b816040528093508581528686860111156111c257600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156111ef57600080fd5b6111f88361110a565b9150602083013567ffffffffffffffff81111561121457600080fd5b8301601f8101851361122557600080fd5b61123485823560208401611166565b9150509250929050565b60008060006060848603121561125357600080fd5b61125c8461110a565b925061126a6020850161110a565b9150604084013590509250925092565b60006020828403121561128c57600080fd5b6104848261110a565b600080604083850312156112a857600080fd5b6112b18361110a565b9150602083013580151581146112c657600080fd5b809150509250929050565b600080600080608085870312156112e757600080fd5b6112f08561110a565b93506112fe6020860161110a565b925060408501359150606085013567ffffffffffffffff81111561132157600080fd5b8501601f8101871361133257600080fd5b61134187823560208401611166565b91505092959194509250565b6000806040838503121561136057600080fd5b6113698361110a565b91506113776020840161110a565b90509250929050565b600181811c9082168061139457607f821691505b6020821081036113b457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000835161141981846020880161108e565b83519083019061142d81836020880161108e565b01949350505050565b601f82111561044f57600081815260208120601f850160051c8101602086101561145d5750805b601f850160051c820191505b8181101561147c57828155600101611469565b505050505050565b815167ffffffffffffffff81111561149e5761149e611150565b6114b2816114ac8454611380565b84611436565b602080601f8311600181146114e757600084156114cf5750858301515b600019600386901b1c1916600185901b17855561147c565b600085815260208120601f198616915b82811015611516578886015182559484019460019091019084016114f7565b50858210156115345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061160e908301846110b2565b9695505050505050565b60006020828403121561162a57600080fd5b81516104848161105b56fea26469706673582212205ffaf73be6fd0effd4e2748fe016dd869c1f989c761192b42fd1ac014ae5b31364736f6c63430008120033";

type DemoNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DemoNFT__factory extends ContractFactory {
  constructor(...args: DemoNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DemoNFT> {
    return super.deploy(overrides || {}) as Promise<DemoNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DemoNFT {
    return super.attach(address) as DemoNFT;
  }
  override connect(signer: Signer): DemoNFT__factory {
    return super.connect(signer) as DemoNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoNFTInterface {
    return new utils.Interface(_abi) as DemoNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DemoNFT {
    return new Contract(address, _abi, signerOrProvider) as DemoNFT;
  }
}
